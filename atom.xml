<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://dfberry.github.io/</id>
    <title>Dina Berry RSS feed</title>
    <updated>2023-02-10T00:39:51.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="http://dfberry.github.io/"/>
    <subtitle>Dina Berry developer and technical writer RSS feed</subtitle>
    <icon>http://dfberry.github.io/favicon.ico</icon>
    <rights>Copyright © 2023 Dina Berry.</rights>
    <entry>
        <title type="html"><![CDATA[TypeScript type guard for empty JSON object]]></title>
        <id>http://dfberry.github.io/2023.02.04-github-graphql-commit-history-with-typescript</id>
        <link href="http://dfberry.github.io/2023.02.04-github-graphql-commit-history-with-typescript"/>
        <updated>2023-02-10T00:39:51.000Z</updated>
        <summary type="html"><![CDATA[Safely type through an object's type which includes an empty JSON object.]]></summary>
        <content type="html"><![CDATA[<p>A commit history for a repo on GitHub can be optional, if there are no commits yet. The TypeScript SDK created by the <a href="https://www.npmjs.com/package/@graphql-codegen/cli" target="_blank" rel="noopener noreferrer">GraphQL CodeGen</a> represents this optionality is represented with an empty object, null, or undefined. If a commit is present, its represented as a nested JSON object with more optional parameters.</p><div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">declare</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> x</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">null</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">undefined</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">'a'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"> more optional params </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The empty JSON object, <code>{}</code>, is tricky in JavaScript. There are several examples of testing for an empty object but they generally don't work as type guards in TypeScript for type safety.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="type-guard-with-in">Type guard with <code>in</code><a href="#type-guard-with-in" class="hash-link" aria-label="Direct link to type-guard-with-in" title="Direct link to type-guard-with-in">​</a></h2><p>After asking on <a href="https://stackoverflow.com/questions/75278401/how-do-i-get-type-target-history-from-github-graphql-on-defaultbranchref" target="_blank" rel="noopener noreferrer">StackOverlow</a> and getting no response, I reached out to my local TypeScript expert for help.</p><p>He helped boil the issue down to the type shown in the previous code block with a type guard using the <code>in</code> keyword:</p><div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> x </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">undefined</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"a"</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// no null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// not undefined</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// x has property 'a' so it isn't empty</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="TypeScript" term="TypeScript"/>
        <category label="type guard" term="type guard"/>
        <category label="GitHub" term="GitHub"/>
        <category label="GraphQL" term="GraphQL"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Azure Cloud Shell Frequently asked questions]]></title>
        <id>http://dfberry.github.io/2023-02-09-azure-cloud-shell-faq</id>
        <link href="http://dfberry.github.io/2023-02-09-azure-cloud-shell-faq"/>
        <updated>2023-02-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Things I wish I knew about Azure CLI and Azure Cloud shell]]></summary>
        <content type="html"><![CDATA[<ol><li><p>You don't need to install <a href="https://learn.microsoft.com/en-us/cli/azure/what-is-azure-cli" target="_blank" rel="noopener noreferrer">Azure CLI</a> in your local dev environment. </p><p>The Cloud Shell (Azure CLI in a browser) is available from the <a href="https://portal.azure.com" target="_blank" rel="noopener noreferrer">Azure portal</a>. </p><p><img loading="lazy" alt="Screenshot showing Azure Cloud Shell is available from top navigation bar in Azure portal. " src="/assets/images/azure-cloud-shell-button-58482e80e2729845c618a7f3a7d737ae.png" width="10112" height="3424" class="img_ev3q"></p></li></ol><ol start="2"><li><p>The cloud shell is sticky. Because the Cloud shell uses Azure Storage (File storage), when you end your sessions then return, <a href="https://learn.microsoft.com/en-us/azure/cloud-shell/persisting-shell-storage" target="_blank" rel="noopener noreferrer">your files are still there</a>. </p><ul><li>Want to quickly work with a GitHub repo? No problem, <strong>git</strong> is available. </li></ul></li></ol><ol start="3"><li><p>Because you use it from the portal, you are already authenticated. No need for <a href="https://learn.microsoft.com/cli/azure/reference-index?view=azure-cli-latest#az-login" target="_blank" rel="noopener noreferrer">az login</a>.</p></li><li><p>Many CLI tools are already installed for you.</p><ul><li>Azure CLI</li><li>git, zip, jq</li><li>code (not exactly Visual Studio Code, but a good IDE)</li><li>nano, vim</li><li>Node.js, npm</li><li>Java and Maven</li><li>Python</li><li>.NET Core</li><li>PowerShell</li><li>Go (Golang)</li><li><a href="https://learn.microsoft.com/azure/azure-functions/functions-run-local" target="_blank" rel="noopener noreferrer">Azure Functions CLI</a></li><li>Docker CLI, Kubectl, Helm, Terraform, Ansible</li><li><a href="https://pnp.github.io/cli-microsoft365/" target="_blank" rel="noopener noreferrer">Office 365 CLI</a></li><li>MySQL client</li><li>PostgreSql client</li><li>SQL cli</li></ul></li><li><p>Create <a href="https://learn.microsoft.com/azure/cloud-shell/quickstart" target="_blank" rel="noopener noreferrer">bash scripts with Azure CLI commands</a> to manage your Azure resources.</p></li></ol>]]></content>
        <category label="Azure" term="Azure"/>
        <category label="Azure CLI" term="Azure CLI"/>
        <category label="Azure Cloud Shell" term="Azure Cloud Shell"/>
        <category label="Tips" term="Tips"/>
    </entry>
</feed>