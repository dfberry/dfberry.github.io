"use strict";(self.webpackChunkdocusaurus_blog_with_search=self.webpackChunkdocusaurus_blog_with_search||[]).push([[450],{6029:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2023-02-09-azure-cloud-shell-faq","metadata":{"permalink":"/2023-02-09-azure-cloud-shell-faq","source":"@site/blog/2023-02-09-azure-cloud-shell-faq.md","title":"Azure Cloud Shell Frequently asked questions","description":"Things I wish I knew about Azure CLI and Azure Cloud shell","date":"2023-02-09T00:00:00.000Z","formattedDate":"February 9, 2023","tags":[{"label":"Azure","permalink":"/tags/azure"},{"label":"Azure CLI","permalink":"/tags/azure-cli"},{"label":"Azure Cloud Shell","permalink":"/tags/azure-cloud-shell"},{"label":"Tips","permalink":"/tags/tips"}],"readingTime":0.92,"hasTruncateMarker":false,"authors":[],"frontMatter":{"slug":"/2023-02-09-azure-cloud-shell-faq","canonical_url":"https://dfberry.github.io/blog/2023-02-09-azure-cloud-shell-faq","custom_edit_url":null,"sidebar_label":"2023.02.09 Azure Cloud Shell FAQ","title":"Azure Cloud Shell Frequently asked questions","description":"Things I wish I knew about Azure CLI and Azure Cloud shell","published":true,"tags":["Azure","Azure CLI","Azure Cloud Shell","Tips"],"updated":"2023-02-09 05:00 PST"},"nextItem":{"title":"TypeScript type guard for empty JSON object","permalink":"/2023.02.04-github-graphql-commit-history-with-typescript"}},"content":"1. You don\'t need to install [Azure CLI](https://learn.microsoft.com/en-us/cli/azure/what-is-azure-cli) in your local dev environment. \\n\\n    The Cloud Shell (Azure CLI in a browser) is available from the [Azure portal](https://portal.azure.com). \\n\\n    ![Screenshot showing Azure Cloud Shell is available from top navigation bar in Azure portal. ](./media/2023-02-09/azure-cloud-shell-button.png)\\n\\n\\n2. The cloud shell is sticky. Because the Cloud shell uses Azure Storage (File storage), when you end your sessions then return, [your files are still there](https://learn.microsoft.com/en-us/azure/cloud-shell/persisting-shell-storage). \\n\\n    * Want to quickly work with a GitHub repo? No problem, **git** is available. \\n\\n\\n3. Because you use it from the portal, you are already authenticated. No need for [az login](https://learn.microsoft.com/cli/azure/reference-index?view=azure-cli-latest#az-login).\\n4. Many CLI tools are already installed for you.\\n    * Azure CLI\\n    * git, zip, jq\\n    * code (not exactly Visual Studio Code, but a good IDE)\\n    * nano, vim\\n    * Node.js, npm\\n    * Java and Maven\\n    * Python\\n    * .NET Core\\n    * PowerShell\\n    * Go (Golang)\\n    * [Azure Functions CLI](https://learn.microsoft.com/azure/azure-functions/functions-run-local)\\n    * Docker CLI, Kubectl, Helm, Terraform, Ansible\\n    * [Office 365 CLI](https://pnp.github.io/cli-microsoft365/)\\n    * MySQL client\\n    * PostgreSql client\\n    * SQL cli\\n\\n5. Create [bash scripts with Azure CLI commands](https://learn.microsoft.com/azure/cloud-shell/quickstart) to manage your Azure resources."},{"id":"/2023.02.04-github-graphql-commit-history-with-typescript","metadata":{"permalink":"/2023.02.04-github-graphql-commit-history-with-typescript","source":"@site/blog/2023-02-04-blog.md","title":"TypeScript type guard for empty JSON object","description":"Safely type through an object\'s type which includes an empty JSON object.","date":"2023-02-04T00:00:00.000Z","formattedDate":"February 4, 2023","tags":[{"label":"TypeScript","permalink":"/tags/type-script"},{"label":"type guard","permalink":"/tags/type-guard"},{"label":"GitHub","permalink":"/tags/git-hub"},{"label":"GraphQL","permalink":"/tags/graph-ql"}],"readingTime":0.91,"hasTruncateMarker":false,"authors":[],"frontMatter":{"slug":"/2023.02.04-github-graphql-commit-history-with-typescript","canonical_url":"https://dfberry.github.io/blog/2023.02.04-github-graphql-commit-history-with-typescript","custom_edit_url":null,"sidebar_label":"2023.02.04 TS + GitHub GraphQL Commit history","title":"TypeScript type guard for empty JSON object","description":"Safely type through an object\'s type which includes an empty JSON object.","published":true,"tags":["TypeScript","type guard","GitHub","GraphQL"],"updated":"2023-02-04 06:21 PST"},"prevItem":{"title":"Azure Cloud Shell Frequently asked questions","permalink":"/2023-02-09-azure-cloud-shell-faq"}},"content":"A commit history for a repo on GitHub can be optional, if there are no commits yet. The TypeScript SDK created by the [GraphQL CodeGen](https://www.npmjs.com/package/@graphql-codegen/cli) represents this optionality is represented with an empty object, null, or undefined. If a commit is present, its represented as a nested JSON object with more optional parameters.\\n\\n```typescript\\ndeclare var x:\\n  {} |\\n  null |\\n  undefined |\\n  {\'a\':\\n      { ... more optional params }\\n  }\\n```\\n\\nThe empty JSON object, `{}`, is tricky in JavaScript. There are several examples of testing for an empty object but they generally don\'t work as type guards in TypeScript for type safety.\\n\\n## Type guard with `in`\\n\\nAfter asking on [StackOverlow](https://stackoverflow.com/questions/75278401/how-do-i-get-type-target-history-from-github-graphql-on-defaultbranchref) and getting no response, I reached out to my local TypeScript expert for help.\\n\\nHe helped boil the issue down to the type shown in the previous code block with a type guard using the `in` keyword:\\n\\n```typescript\\nif (x !== null && x !== undefined && \\"a\\" in x) {\\n  // no null\\n  // not undefined\\n  // x has property \'a\' so it isn\'t empty\\n  console.log(x.a);\\n}\\n```"}]}')}}]);